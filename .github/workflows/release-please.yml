on:
  push:
    branches:
      - main


name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
    steps:
      - id: release
        uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # v4.2.0
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
  update-major-minor:
    runs-on: ubuntu-latest
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: 'main'
          fetch-depth: 0
      - name: Tag major and minor versions
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          
          # Delete old major and minor tag
          git tag -d v${{ needs.release-please.outputs.major }} || true
          git tag -d v${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }} || true
          git push origin :v${{ needs.release-please.outputs.major }} || true
          git push origin :v${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }} || true
          
          # Create new major and minor tag
          git tag -a v${{ needs.release-please.outputs.major }} -m "Release v${{ needs.release-please.outputs.major }}"
          git tag -a v${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }} -m "Release v${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}"
          git push origin v${{ needs.release-please.outputs.major }}
          git push origin v${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}
  update-readme:
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    needs: [release-please]
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: 'main'
          fetch-depth: 0

      - id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@main
        with:
          repo_secrets: |
            GITHUB_APP_ID=helper-bot:app-id
            GITHUB_APP_PRIVATE_KEY=helper-bot:private-key

      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ env.GITHUB_APP_ID }}
          private-key: ${{ env.GITHUB_APP_PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
      - run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

      - name: Update readme
        run: |
          git checkout -b helper-bot/readme-${{ needs.release-please.outputs.tag_name }}
          TAG_HASH="$(git rev-parse ${{ needs.release-please.outputs.tag_name }})" TAG="${{ needs.release-please.outputs.tag_name }}" envsubst < ./docs/README.tmpl > ./README.md
          git add README.md

      - name: Commit changes
        uses: grafana/github-api-commit-action@db25908818706393572c06ecd63c378e8561314d # v0.4.0
        with:
          commit-message: 'chore(readme): update readme for ${{ needs.release-please.outputs.tag_name }} [BOT]'
          create-branch-on-remote: 'true'
          token: ${{ steps.app-token.outputs.token }}

      - name: Create pull request
        id: cpr
        run: |
          PR_URL=$(gh pr create --title "chore(readme): update readme for ${{ needs.release-please.outputs.tag_name }} [BOT]" --body "PR created automatically through release-please.yml workflow")
          echo "PR_URL=$PR_URL" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Approve and auto-merge
        run: gh pr review --approve "$PR_URL" && gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{steps.cpr.outputs.PR_URL}}
          GH_TOKEN: ${{ github.token }}
