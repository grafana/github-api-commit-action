on:
  push:
    branches:
      - main


name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
    steps:
      - id: release
        uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # v4.2.0
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
  update-major-minor:
    runs-on: ubuntu-latest
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: 'main'
          fetch-depth: 0
          persist-credentials: true
      - name: Tag major and minor versions
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          
          # Delete old major and minor tag
          git tag -d v${MAJOR} || true
          git tag -d v${MAJOR}.${MINOR} || true
          git push origin :v${MAJOR} || true
          git push origin :v${MAJOR}.${MINOR} || true
          
          # Create new major and minor tag
          git tag -a v${MAJOR} -m "Release v${MAJOR}"
          git tag -a v${MAJOR}.${MINOR} -m "Release v${MAJOR}.${MINOR}"
          git push origin v${MAJOR}
          git push origin v${MAJOR}.${MINOR}
        env:
          MAJOR: ${{ needs.release-please.outputs.major }}
          MINOR: ${{ needs.release-please.outputs.minor }}
  update-readme:
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    needs: [release-please]
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: 'main'
          fetch-depth: 0
          persist-credentials: true

      - id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@28361cdb22223e5f1e34358c86c20908e7248760 # get-vault-secrets-v1.1.0
        with:
          repo_secrets: |
            GITHUB_APP_ID=helper-bot:app-id
            GITHUB_APP_PRIVATE_KEY=helper-bot:private-key

      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ env.GITHUB_APP_ID }}
          private-key: ${{ env.GITHUB_APP_PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${APP_SLUG}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          APP_SLUG: ${{ steps.app-token.outputs.app-slug }}
      - run: |
          git config --global user.name "${APP_SLUG}[bot]"
          git config --global user.email "${USER_ID}+${APP_SLUG}[bot]@users.noreply.github.com"
        env:
          APP_SLUG: ${{ steps.app-token.outputs.app-slug }}
          USER_ID: ${{ steps.get-user-id.outputs.user-id }}

      - name: Update readme
        run: |
          git checkout -b helper-bot/readme-${TAG_NAME}
          TAG_HASH="$(git rev-parse ${TAG_NAME})" TAG="${TAG_NAME}" envsubst < ./docs/README.tmpl > ./README.md
          git add README.md
        env:
          TAG_NAME: ${{ needs.release-please.outputs.tag_name }}

      - name: Commit changes
        uses: grafana/github-api-commit-action@4eceeb68aa8b00d6acdf43eef81e2ceea9b432fb # v0.4.2
        with:
          commit-message: 'chore(readme): update readme for ${{ needs.release-please.outputs.tag_name }} [BOT]'
          create-branch-on-remote: 'true'
          token: ${{ steps.app-token.outputs.token }}

      - name: Create pull request
        id: cpr
        run: |
          PR_URL=$(gh pr create --title "chore(readme): update readme for ${TAG_NAME} [BOT]" --body "PR created automatically through release-please.yml workflow")
          echo "PR_URL=$PR_URL" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          TAG_NAME: ${{ needs.release-please.outputs.tag_name }}

      - name: Approve and auto-merge
        run: gh pr review --approve "$PR_URL" && gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{steps.cpr.outputs.PR_URL}}
          GH_TOKEN: ${{ github.token }}
