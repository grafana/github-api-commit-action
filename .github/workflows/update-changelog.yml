name: Update Changelog

on:
  pull_request:
    branches:
      - main
    types: [closed]
jobs:
  update_changelog:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.actor != 'github-actions[bot]' && github.actor != 'dependabot[bot]'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # We want to update our changelog on main
          ref: 'main'

      - name: Install utilities
        run: sudo apt-get install jq

      - name: Get PR information
        id: pr
        uses: octokit/request-action@dad4362715b7fb2ddedf9772c8670824af564f0d # v2.4.0
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Changelog
        run: |
          BRANCH_NAME="update-changelog-$(date +%s)"
          
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          git checkout -b $BRANCH_NAME
          git push --set-upstream origin $BRANCH_NAME
          
          PR_LINE=$(node .github/workflows/scripts/get-changelog-line.js)
          sed -i "/## Unreleased/ a $PR_LINE" CHANGELOG.md
          git add CHANGELOG.md
        env:
          PR_DATA: ${{ steps.pr.outputs.data }}

      - name: Commit changes
        uses: grafana/github-api-commit-action@077642073699d6dd9e9c42a9f69ce517fabf79d2 # v0.3.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update changelog [bot]'

      - name: Create pull request
        id: cpr
        run: |
          PR_URL=$(gh pr create --title "chore: update changelog [bot]" --body "PR created automatically through update-changelog.yml workflow")
          echo "PR_URL=$PR_URL" >> $GITHUB_OUTPUT

      - name: Approve and auto-merge
        run: gh pr review --approve "$PR_URL" && gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{steps.cpr.outputs.PR_URL}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
